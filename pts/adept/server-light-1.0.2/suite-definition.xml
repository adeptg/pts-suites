<?xml version="1.0"?>
<!--Phoronix Test Suite v10.8.4-->
<PhoronixTestSuite>
  <SuiteInformation>
    <Title>server-light</Title>
    <Version>1.0.2</Version>
    <TestType>System</TestType>
    <Description>stripped down pts/server for a faster execution</Description>
    <Maintainer>Yury Vidineev</Maintainer>
  </SuiteInformation>
  <Execute>
    <Test>pts/apache</Test>
    <Arguments>-c 1</Arguments>
    <Description>Concurrent Requests: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/apache</Test>
    <Arguments>-c 500</Arguments>
    <Description>Concurrent Requests: 500</Description>
  </Execute>  
  <Execute>
    <Test>pts/nginx</Test>
    <Arguments>-c 1</Arguments>
    <Description>Concurrent Requests: 1</Description>
  </Execute>
  <Execute>
    <Test>pts/nginx</Test>
    <Arguments>-c 20</Arguments>
    <Description>Concurrent Requests: 20</Description>
  </Execute>  
  <Execute>
    <Test>pts/nginx</Test>
    <Arguments>-c 1000</Arguments>
    <Description>Concurrent Requests: 1000</Description>
  </Execute>
  <Execute>
    <Test>pts/blogbench</Test>
    <Arguments>READ</Arguments>
    <Description>Test: Read</Description>
  </Execute>
  <Execute>
    <Test>pts/blogbench</Test>
    <Arguments>WRITE</Arguments>
    <Description>Test: Write</Description>
  </Execute>
  <Execute>
    <Test>pts/ebizzy</Test>
  </Execute>
  <Execute>
    <Test>pts/apache-siege</Test>
    <Arguments>-c200</Arguments>
    <Description>Concurrent Users: 200</Description>
  </Execute>
  <Execute>
    <Test>pts/apache-siege</Test>
    <Arguments>-c250</Arguments>
    <Description>Concurrent Users: 250</Description>
  </Execute>
  <Execute>
    <Test>pts/mysqlslap</Test>
    <Arguments>--concurrency=64</Arguments>
    <Description>Clients: 64</Description>
  </Execute>
  <Execute>
    <Test>pts/mysqlslap</Test>
    <Arguments>--concurrency=256</Arguments>
    <Description>Clients: 256</Description>
  </Execute>
  <Execute>
    <Test>pts/pgbench</Test>
    <Arguments>-s 1 -c 100 -S</Arguments>
    <Description>Scaling Factor: 1 - Clients: 100 - Mode: Read Only</Description>
  </Execute>
  <Execute>
    <Test>pts/pgbench</Test>
    <Arguments>-s 1 -c 100 -S</Arguments>
    <Description>Scaling Factor: 1 - Clients: 100 - Mode: Read Only - Average Latency</Description>
  </Execute>
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=add --num-conns=1</Arguments>
    <Description>Method: Add - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=get --num-conns=1</Arguments>
    <Description>Method: Get - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=set --num-conns=1</Arguments>
    <Description>Method: Set - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=add --num-conns=128</Arguments>
    <Description>Method: Add - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=get --num-conns=128</Arguments>
    <Description>Method: Get - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=set --num-conns=128</Arguments>
    <Description>Method: Set - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=append --num-conns=1</Arguments>
    <Description>Method: Append - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=delete --num-conns=1</Arguments>
    <Description>Method: Delete - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=prepend --num-conns=1</Arguments>
    <Description>Method: Prepend - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=replace --num-conns=1</Arguments>
    <Description>Method: Replace - Connections: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=append --num-conns=128</Arguments>
    <Description>Method: Append - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=delete --num-conns=128</Arguments>
    <Description>Method: Delete - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=prepend --num-conns=128</Arguments>
    <Description>Method: Prepend - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/mcperf</Test>
    <Arguments>--method=replace --num-conns=128</Arguments>
    <Description>Method: Replace - Connections: 128</Description>
  </Execute>  
  <Execute>
    <Test>pts/redis</Test>
    <Arguments>-t lpop</Arguments>
    <Description>Test: LPOP</Description>
  </Execute>
  <Execute>
    <Test>pts/redis</Test>
    <Arguments>-t sadd</Arguments>
    <Description>Test: SADD</Description>
  </Execute>
  <Execute>
    <Test>pts/redis</Test>
    <Arguments>-t lpush</Arguments>
    <Description>Test: LPUSH</Description>
  </Execute>
  <Execute>
    <Test>pts/redis</Test>
    <Arguments>-t get</Arguments>
    <Description>Test: GET</Description>
  </Execute>
  <Execute>
    <Test>pts/redis</Test>
    <Arguments>-t set</Arguments>
    <Description>Test: SET</Description>
  </Execute>
  <Execute>
    <Test>pts/cassandra</Test>
    <Arguments>READ</Arguments>
    <Description>Test: Reads</Description>
  </Execute>
  <Execute>
    <Test>pts/cassandra</Test>
    <Arguments>WRITE</Arguments>
    <Description>Test: Writes</Description>
  </Execute>
  <Execute>
    <Test>pts/cassandra</Test>
    <Arguments>MIXED_1_1</Arguments>
    <Description>Test: Mixed 1:1</Description>
  </Execute>
  <Execute>
    <Test>pts/cassandra</Test>
    <Arguments>MIXED_1_3</Arguments>
    <Description>Test: Mixed 1:3</Description>
  </Execute>  
  <Execute>
    <Test>pts/rocksdb</Test>
    <Arguments>--benchmarks="readrandom"</Arguments>
    <Description>Test: Random Read</Description>
  </Execute>  
  <Execute>
    <Test>pts/rocksdb</Test>
    <Arguments>--benchmarks="readwhilewriting"</Arguments>
    <Description>Test: Read While Writing</Description>
  </Execute>
  <Execute>
    <Test>pts/rocksdb</Test>
    <Arguments>--benchmarks="readrandomwriterandom"</Arguments>
    <Description>Test: Read Random Write Random</Description>
  </Execute>
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>increment 1</Arguments>
    <Description>Test: Increment - Clients: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>increment 64</Arguments>
    <Description>Test: Increment - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>randomRead 1</Arguments>
    <Description>Test: Random Read - Clients: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>randomWrite 1</Arguments>
    <Description>Test: Random Write - Clients: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>randomRead 64</Arguments>
    <Description>Test: Random Read - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>randomWrite 64</Arguments>
    <Description>Test: Random Write - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>sequentialRead 1</Arguments>
    <Description>Test: Sequential Read - Clients: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>sequentialWrite 1</Arguments>
    <Description>Test: Sequential Write - Clients: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>sequentialRead 64</Arguments>
    <Description>Test: Sequential Read - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>asyncRandomWrite 1</Arguments>
    <Description>Test: Async Random Write - Clients: 1</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>sequentialWrite 64</Arguments>
    <Description>Test: Sequential Write - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>asyncRandomRead 64</Arguments>
    <Description>Test: Async Random Read - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/hbase</Test>
    <Arguments>asyncRandomWrite 64</Arguments>
    <Description>Test: Async Random Write - Clients: 64</Description>
  </Execute>  
  <Execute>
    <Test>pts/php</Test>
    <Arguments>php_/Zend/bench.php</Arguments>
    <Description>Test: Zend bench</Description>
  </Execute>
  <Execute>
    <Test>pts/php</Test>
    <Arguments>php_/Zend/micro_bench.php</Arguments>
    <Description>Test: Zend micro_bench</Description>
  </Execute>
  <Execute>
    <Test>pts/phpbench</Test>
    <Description>PHP Benchmark Suite</Description>
  </Execute>
  <Execute>
    <Test>pts/node-express-loadtest</Test>
    <Mode>BATCH</Mode>
  </Execute>
  <Execute>
    <Test>pts/openssl</Test>
    <Arguments>sha256</Arguments>
    <Description>Algorithm: SHA256</Description>
  </Execute>
  <Execute>
    <Test>pts/openssl</Test>
    <Arguments>rsa4096</Arguments>
    <Description>Algorithm: RSA4096</Description>
  </Execute>
  <Execute>
    <Test>pts/perl-benchmark</Test>
    <Arguments>benchmarks/app/podhtml.b</Arguments>
    <Description>Test: Pod2html</Description>
  </Execute>
  <Execute>
    <Test>pts/perl-benchmark</Test>
    <Arguments>benchmarks/startup/noprog.b</Arguments>
    <Description>Test: Interpreter</Description>
  </Execute>
  <Execute>
    <Test>pts/simdjson</Test>
    <Arguments>kostya</Arguments>
    <Description>Throughput Test: Kostya</Description>
  </Execute>
  <Execute>
    <Test>pts/simdjson</Test>
    <Arguments>large_random</Arguments>
    <Description>Throughput Test: LargeRandom</Description>
  </Execute>
  <Execute>
    <Test>pts/sunflow</Test>
  </Execute>
  <Execute>
    <Test>pts/bork</Test>
  </Execute>
  <Execute>
    <Test>pts/java-scimark2</Test>
    <Mode>BATCH</Mode>
  </Execute>
  <Execute>
    <Test>pts/dacapobench</Test>
    <Mode>BATCH</Mode>
  </Execute>
  <Execute>
    <Test>pts/java-gradle-perf</Test>
    <Arguments>TEST_REACTOR</Arguments>
    <Description>Gradle Build: Reactor</Description>
    <OverrideTestOptions></OverrideTestOptions>
  </Execute>
  <Execute>
    <Test>pts/java-jmh</Test>
    <Arguments></Arguments>
    <Description></Description>
    <OverrideTestOptions></OverrideTestOptions>
  </Execute>
  <Execute>
    <Test>pts/renaissance</Test>
    <Mode>BATCH</Mode>
  </Execute>
</PhoronixTestSuite>
